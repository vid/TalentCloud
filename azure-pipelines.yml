# Docker

# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dev

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'cd1b1353-f350-4fad-ae05-f1489ee57364'
  imageRepository: 'novembertcimage'
  containerRegistry: 'novembertcacr.azurecr.io'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'tc-webapp-sc'
        azureContainerRegistry: '{"loginServer":"novembertcacr.azurecr.io", "id" : "/subscriptions/50dccd85-a488-43bd-9b43-5f3e79de5945/resourceGroups/november-tc-vm-rg/providers/Microsoft.ContainerRegistry/registries/novembertcacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'tc-webapp-sc'
        azureContainerRegistry: '{"loginServer":"novembertcacr.azurecr.io", "id" : "/subscriptions/50dccd85-a488-43bd-9b43-5f3e79de5945/resourceGroups/november-tc-vm-rg/providers/Microsoft.ContainerRegistry/registries/novembertcacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
    - task: CopyFiles@2
      inputs:
        Contents: '**/docker-compose.yml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    