# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  phpVersion: 7.2

steps:
#- script: |
#    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
#    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
#    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
#    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
#    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
#    php -version
#  displayName: 'Use PHP version $(phpVersion)'

- script: |
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    php -r "if (hash_file('sha384', 'composer-setup.php') === 'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    php composer-setup.php
    php -r "unlink('composer-setup.php');"
  displayName: 'install composer'

- script: composer --version
  displayName: 'check composer version'
  
- script: composer install --no-interaction --prefer-dist  --no-dev
  displayName: 'composer install'

- task: Npm@1
  inputs:
    command: 'install'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'run dev'

# FIXME testing
- script: copy .env.testing .env
  displayName: 'copy env'

#- script: ./vendor/bin/phpunit
#  displayName: 'Run tests with phpunit'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(system.defaultWorkingDirectory)'
    includeRootFolder: false
- task: PublishBuildArtifacts@1
